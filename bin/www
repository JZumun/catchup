#!/usr/bin/env node

const app = require("../server.js");
const http = require("http");

const port = (val => {
	const port = parseInt(val, 10);
	return isNaN(port) ? val : port >= 0 ? port : false;
})(process.env.PORT || "8080");
app.set("port", port);

const server = http.createServer(app);
server.listen(port);
server.on("error", error => {
	if (error.syscall !== "listen") { throw error; }
	const bind = typeof port === "string" ? `Pipe ${port}` : `Port ${port}`;
	switch (error.code) {
		case "EACCES":
			console.error(`${bind} requires elevated privileges`);
			return process.exit(1);
		case "EADDRINUSE":
			console.error(`${bind} is already in use`);
			return process.exit(1);
		default:
			throw error;
	}
});
server.on("listening", () => {
	const addr = server.address();
	const bind = typeof addr === "string" ? `pipe ${addr}` : `port ${addr.port}`;
	console.log(`Listening on ${bind}`);
})
